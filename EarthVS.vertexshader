#version 330 
#extension GL_ARB_explicit_uniform_location : require
layout(location = 0) in vec3 vertexPosition_modelspace;
layout(location = 1) in vec2 vertexUV;

out vec2 UV;
layout(location = 3) uniform mat4 MVP;
layout(location = 20) uniform float angle;
layout(location = 22) uniform vec3 axis;

void main(){	

	float c = cos(angle);
	float s = sin(angle);
	float x = axis.x;
	float y = axis.y;
	float z = axis.z;
	vec3 first = vec3(x*x*(1-c)+c, x*y*(1-c)-z*s, x*z*(1-c)+y*s);
	vec3 second = vec3(y*x*(1-c)+z*s, y*y*(1-c)+c, y*z*(1-c)-x*s);
	vec3 third = vec3(z*x*(1-c)-y*s, z*y*(1-c)+x*s, z*z*(1-c)+c);
	mat3 rotateMatrix = mat3(first, second, third);

	vec3 position = vertexPosition_modelspace * rotateMatrix;

	gl_Position =  MVP * vec4(position, 1.0);

	UV = vertexUV;
}

